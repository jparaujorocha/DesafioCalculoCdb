// <auto-generated />
using System;
using DesafioCalculoCdb.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DesafioCalculoCdb.Infra.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230218061947_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DesafioCalculoCdb.Domain.Entities.Imposto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("IdTipoImposto")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoImposto");

                    b.ToTable("Impostos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            IdTipoImposto = 1,
                            Nome = "CDB6",
                            Valor = 22.5m
                        },
                        new
                        {
                            Id = 2,
                            Ativo = true,
                            IdTipoImposto = 1,
                            Nome = "CDB12",
                            Valor = 20m
                        },
                        new
                        {
                            Id = 3,
                            Ativo = true,
                            IdTipoImposto = 1,
                            Nome = "CDB24",
                            Valor = 17.5m
                        },
                        new
                        {
                            Id = 4,
                            Ativo = true,
                            IdTipoImposto = 1,
                            Nome = "CDB24PLUS",
                            Valor = 15m
                        });
                });

            modelBuilder.Entity("DesafioCalculoCdb.Domain.Entities.ImpostoInvestimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdImposto")
                        .HasColumnType("int");

                    b.Property<int>("IdInvestimento")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdImposto");

                    b.HasIndex("IdInvestimento");

                    b.ToTable("ImpostoInvestimentos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            DataInicio = new DateTime(2023, 2, 18, 3, 19, 46, 365, DateTimeKind.Local).AddTicks(7063),
                            IdImposto = 1,
                            IdInvestimento = 1
                        },
                        new
                        {
                            Id = 2,
                            Ativo = true,
                            DataInicio = new DateTime(2023, 2, 18, 3, 19, 46, 368, DateTimeKind.Local).AddTicks(6985),
                            IdImposto = 2,
                            IdInvestimento = 1
                        },
                        new
                        {
                            Id = 3,
                            Ativo = true,
                            DataInicio = new DateTime(2023, 2, 18, 3, 19, 46, 368, DateTimeKind.Local).AddTicks(6985),
                            IdImposto = 3,
                            IdInvestimento = 1
                        },
                        new
                        {
                            Id = 4,
                            Ativo = true,
                            DataInicio = new DateTime(2023, 2, 18, 3, 19, 46, 368, DateTimeKind.Local).AddTicks(6985),
                            IdImposto = 4,
                            IdInvestimento = 1
                        });
                });

            modelBuilder.Entity("DesafioCalculoCdb.Domain.Entities.Investimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataDeCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataDeFinalizacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal>("ValorTaxaBanco")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorTaxaInvestimento")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Investimentos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            DataDeCriacao = new DateTime(2023, 2, 18, 3, 19, 46, 370, DateTimeKind.Local).AddTicks(6930),
                            Nome = "CDB",
                            ValorTaxaBanco = 108m,
                            ValorTaxaInvestimento = 0.9m
                        },
                        new
                        {
                            Id = 2,
                            Ativo = false,
                            DataDeCriacao = new DateTime(2023, 2, 18, 3, 19, 46, 371, DateTimeKind.Local).AddTicks(6904),
                            Nome = "OUTROS",
                            ValorTaxaBanco = 112m,
                            ValorTaxaInvestimento = 0.1m
                        });
                });

            modelBuilder.Entity("DesafioCalculoCdb.Domain.Entities.TipoImposto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("TipoImpostos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "PERCENTUAL"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "VALOR FIXO"
                        });
                });

            modelBuilder.Entity("DesafioCalculoCdb.Domain.Entities.Imposto", b =>
                {
                    b.HasOne("DesafioCalculoCdb.Domain.Entities.TipoImposto", "TipoImposto")
                        .WithMany("Impostos")
                        .HasForeignKey("IdTipoImposto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DesafioCalculoCdb.Domain.Entities.ImpostoInvestimento", b =>
                {
                    b.HasOne("DesafioCalculoCdb.Domain.Entities.Imposto", "Imposto")
                        .WithMany("ImpostoInvestimentos")
                        .HasForeignKey("IdImposto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DesafioCalculoCdb.Domain.Entities.Investimento", "Investimento")
                        .WithMany("ImpostoInvestimentos")
                        .HasForeignKey("IdInvestimento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
